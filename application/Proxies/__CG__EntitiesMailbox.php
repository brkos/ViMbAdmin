<?php

namespace Proxies\__CG__\Entities;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Mailbox extends \Entities\Mailbox implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'Entities\\Mailbox' . "\0" . 'username', '' . "\0" . 'Entities\\Mailbox' . "\0" . 'password', '' . "\0" . 'Entities\\Mailbox' . "\0" . 'name', '' . "\0" . 'Entities\\Mailbox' . "\0" . 'alt_email', '' . "\0" . 'Entities\\Mailbox' . "\0" . 'quota', '' . "\0" . 'Entities\\Mailbox' . "\0" . 'local_part', '' . "\0" . 'Entities\\Mailbox' . "\0" . 'active', '' . "\0" . 'Entities\\Mailbox' . "\0" . 'access_restriction', '' . "\0" . 'Entities\\Mailbox' . "\0" . 'homedir', '' . "\0" . 'Entities\\Mailbox' . "\0" . 'maildir', '' . "\0" . 'Entities\\Mailbox' . "\0" . 'uid', '' . "\0" . 'Entities\\Mailbox' . "\0" . 'gid', '' . "\0" . 'Entities\\Mailbox' . "\0" . 'created', '' . "\0" . 'Entities\\Mailbox' . "\0" . 'modified', '' . "\0" . 'Entities\\Mailbox' . "\0" . 'id', '' . "\0" . 'Entities\\Mailbox' . "\0" . 'Preferences', '' . "\0" . 'Entities\\Mailbox' . "\0" . 'homedir_size', '' . "\0" . 'Entities\\Mailbox' . "\0" . 'maildir_size', '' . "\0" . 'Entities\\Mailbox' . "\0" . 'size_at', '' . "\0" . 'Entities\\Mailbox' . "\0" . 'Domain', '' . "\0" . 'Entities\\Mailbox' . "\0" . 'DirectoryEntry', '' . "\0" . 'Entities\\Mailbox' . "\0" . 'delete_pending', '_className', '_preferenceClassName', '' . "\0" . 'Entities\\Mailbox' . "\0" . '_cache', '' . "\0" . 'Entities\\Mailbox' . "\0" . '_namespace'];
        }

        return ['__isInitialized__', '' . "\0" . 'Entities\\Mailbox' . "\0" . 'username', '' . "\0" . 'Entities\\Mailbox' . "\0" . 'password', '' . "\0" . 'Entities\\Mailbox' . "\0" . 'name', '' . "\0" . 'Entities\\Mailbox' . "\0" . 'alt_email', '' . "\0" . 'Entities\\Mailbox' . "\0" . 'quota', '' . "\0" . 'Entities\\Mailbox' . "\0" . 'local_part', '' . "\0" . 'Entities\\Mailbox' . "\0" . 'active', '' . "\0" . 'Entities\\Mailbox' . "\0" . 'access_restriction', '' . "\0" . 'Entities\\Mailbox' . "\0" . 'homedir', '' . "\0" . 'Entities\\Mailbox' . "\0" . 'maildir', '' . "\0" . 'Entities\\Mailbox' . "\0" . 'uid', '' . "\0" . 'Entities\\Mailbox' . "\0" . 'gid', '' . "\0" . 'Entities\\Mailbox' . "\0" . 'created', '' . "\0" . 'Entities\\Mailbox' . "\0" . 'modified', '' . "\0" . 'Entities\\Mailbox' . "\0" . 'id', '' . "\0" . 'Entities\\Mailbox' . "\0" . 'Preferences', '' . "\0" . 'Entities\\Mailbox' . "\0" . 'homedir_size', '' . "\0" . 'Entities\\Mailbox' . "\0" . 'maildir_size', '' . "\0" . 'Entities\\Mailbox' . "\0" . 'size_at', '' . "\0" . 'Entities\\Mailbox' . "\0" . 'Domain', '' . "\0" . 'Entities\\Mailbox' . "\0" . 'DirectoryEntry', '' . "\0" . 'Entities\\Mailbox' . "\0" . 'delete_pending', '_className', '_preferenceClassName', '' . "\0" . 'Entities\\Mailbox' . "\0" . '_cache', '' . "\0" . 'Entities\\Mailbox' . "\0" . '_namespace'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Mailbox $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function setUsername($username)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUsername', [$username]);

        return parent::setUsername($username);
    }

    /**
     * {@inheritDoc}
     */
    public function getUsername()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUsername', []);

        return parent::getUsername();
    }

    /**
     * {@inheritDoc}
     */
    public function setPassword($password)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPassword', [$password]);

        return parent::setPassword($password);
    }

    /**
     * {@inheritDoc}
     */
    public function getPassword()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPassword', []);

        return parent::getPassword();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$name]);

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setAltEmail($altEmail)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAltEmail', [$altEmail]);

        return parent::setAltEmail($altEmail);
    }

    /**
     * {@inheritDoc}
     */
    public function getAltEmail()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAltEmail', []);

        return parent::getAltEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function setQuota($quota)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setQuota', [$quota]);

        return parent::setQuota($quota);
    }

    /**
     * {@inheritDoc}
     */
    public function getQuota()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getQuota', []);

        return parent::getQuota();
    }

    /**
     * {@inheritDoc}
     */
    public function setLocalPart($localPart)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLocalPart', [$localPart]);

        return parent::setLocalPart($localPart);
    }

    /**
     * {@inheritDoc}
     */
    public function getLocalPart()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLocalPart', []);

        return parent::getLocalPart();
    }

    /**
     * {@inheritDoc}
     */
    public function setActive($active)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setActive', [$active]);

        return parent::setActive($active);
    }

    /**
     * {@inheritDoc}
     */
    public function getActive()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getActive', []);

        return parent::getActive();
    }

    /**
     * {@inheritDoc}
     */
    public function setAccessRestriction($accessRestriction)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAccessRestriction', [$accessRestriction]);

        return parent::setAccessRestriction($accessRestriction);
    }

    /**
     * {@inheritDoc}
     */
    public function getAccessRestriction()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAccessRestriction', []);

        return parent::getAccessRestriction();
    }

    /**
     * {@inheritDoc}
     */
    public function setHomedir($homedir)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHomedir', [$homedir]);

        return parent::setHomedir($homedir);
    }

    /**
     * {@inheritDoc}
     */
    public function getHomedir()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHomedir', []);

        return parent::getHomedir();
    }

    /**
     * {@inheritDoc}
     */
    public function setMaildir($maildir)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMaildir', [$maildir]);

        return parent::setMaildir($maildir);
    }

    /**
     * {@inheritDoc}
     */
    public function getMaildir()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMaildir', []);

        return parent::getMaildir();
    }

    /**
     * {@inheritDoc}
     */
    public function getCleanedMaildir()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCleanedMaildir', []);

        return parent::getCleanedMaildir();
    }

    /**
     * {@inheritDoc}
     */
    public function setUid($uid)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUid', [$uid]);

        return parent::setUid($uid);
    }

    /**
     * {@inheritDoc}
     */
    public function getUid()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUid', []);

        return parent::getUid();
    }

    /**
     * {@inheritDoc}
     */
    public function setGid($gid)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGid', [$gid]);

        return parent::setGid($gid);
    }

    /**
     * {@inheritDoc}
     */
    public function getGid()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGid', []);

        return parent::getGid();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreated($created)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreated', [$created]);

        return parent::setCreated($created);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreated()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreated', []);

        return parent::getCreated();
    }

    /**
     * {@inheritDoc}
     */
    public function setModified($modified)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setModified', [$modified]);

        return parent::setModified($modified);
    }

    /**
     * {@inheritDoc}
     */
    public function getModified()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getModified', []);

        return parent::getModified();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function addPreference(\Entities\MailboxPreference $preferences)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPreference', [$preferences]);

        return parent::addPreference($preferences);
    }

    /**
     * {@inheritDoc}
     */
    public function removePreference(\Entities\MailboxPreference $preferences)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removePreference', [$preferences]);

        return parent::removePreference($preferences);
    }

    /**
     * {@inheritDoc}
     */
    public function getPreferences()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPreferences', []);

        return parent::getPreferences();
    }

    /**
     * {@inheritDoc}
     */
    public function setDomain(\Entities\Domain $domain = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDomain', [$domain]);

        return parent::setDomain($domain);
    }

    /**
     * {@inheritDoc}
     */
    public function getDomain()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDomain', []);

        return parent::getDomain();
    }

    /**
     * {@inheritDoc}
     */
    public function addMailboxPreference(\Entities\MailboxPreference $preferences)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addMailboxPreference', [$preferences]);

        return parent::addMailboxPreference($preferences);
    }

    /**
     * {@inheritDoc}
     */
    public function formatMaildir($maildir = '')
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'formatMaildir', [$maildir]);

        return parent::formatMaildir($maildir);
    }

    /**
     * {@inheritDoc}
     */
    public function formatHomedir($homedir = '')
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'formatHomedir', [$homedir]);

        return parent::formatHomedir($homedir);
    }

    /**
     * {@inheritDoc}
     */
    public function setHomedirSize($homedirSize)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHomedirSize', [$homedirSize]);

        return parent::setHomedirSize($homedirSize);
    }

    /**
     * {@inheritDoc}
     */
    public function getHomedirSize()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHomedirSize', []);

        return parent::getHomedirSize();
    }

    /**
     * {@inheritDoc}
     */
    public function setMaildirSize($maildirSize)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMaildirSize', [$maildirSize]);

        return parent::setMaildirSize($maildirSize);
    }

    /**
     * {@inheritDoc}
     */
    public function getMaildirSize()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMaildirSize', []);

        return parent::getMaildirSize();
    }

    /**
     * {@inheritDoc}
     */
    public function setSizeAt($sizeAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSizeAt', [$sizeAt]);

        return parent::setSizeAt($sizeAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getSizeAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSizeAt', []);

        return parent::getSizeAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setDirectoryEntry(\Entities\DirectoryEntry $directoryEntry = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDirectoryEntry', [$directoryEntry]);

        return parent::setDirectoryEntry($directoryEntry);
    }

    /**
     * {@inheritDoc}
     */
    public function getDirectoryEntry()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDirectoryEntry', []);

        return parent::getDirectoryEntry();
    }

    /**
     * {@inheritDoc}
     */
    public function setDeletePending($deletePending)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDeletePending', [$deletePending]);

        return parent::setDeletePending($deletePending);
    }

    /**
     * {@inheritDoc}
     */
    public function getDeletePending()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDeletePending', []);

        return parent::getDeletePending();
    }

    /**
     * {@inheritDoc}
     */
    public function loadPreference($attribute, $index = 0, $includeExpired = false)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'loadPreference', [$attribute, $index, $includeExpired]);

        return parent::loadPreference($attribute, $index, $includeExpired);
    }

    /**
     * {@inheritDoc}
     */
    public function hasPreference($attribute, $index = 0, $includeExpired = false)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasPreference', [$attribute, $index, $includeExpired]);

        return parent::hasPreference($attribute, $index, $includeExpired);
    }

    /**
     * {@inheritDoc}
     */
    public function getPreference($attribute, $index = 0, $includeExpired = false)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPreference', [$attribute, $index, $includeExpired]);

        return parent::getPreference($attribute, $index, $includeExpired);
    }

    /**
     * {@inheritDoc}
     */
    public function setPreference($attribute, $value, $operator = '=', $expires = 0, $index = 0)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPreference', [$attribute, $value, $operator, $expires, $index]);

        return parent::setPreference($attribute, $value, $operator, $expires, $index);
    }

    /**
     * {@inheritDoc}
     */
    public function addIndexedPreference($attribute, $value, $operator = '=', $expires = 0, $max = 0)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addIndexedPreference', [$attribute, $value, $operator, $expires, $max]);

        return parent::addIndexedPreference($attribute, $value, $operator, $expires, $max);
    }

    /**
     * {@inheritDoc}
     */
    public function cleanExpiredPreferences($asOf = NULL, $attribute = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'cleanExpiredPreferences', [$asOf, $attribute]);

        return parent::cleanExpiredPreferences($asOf, $attribute);
    }

    /**
     * {@inheritDoc}
     */
    public function deletePreference($attribute, $index = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'deletePreference', [$attribute, $index]);

        return parent::deletePreference($attribute, $index);
    }

    /**
     * {@inheritDoc}
     */
    public function expungePreferences()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'expungePreferences', []);

        return parent::expungePreferences();
    }

    /**
     * {@inheritDoc}
     */
    public function getIndexedPreference($attribute, $withIndex = false, $ignoreExpired = true)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIndexedPreference', [$attribute, $withIndex, $ignoreExpired]);

        return parent::getIndexedPreference($attribute, $withIndex, $ignoreExpired);
    }

    /**
     * {@inheritDoc}
     */
    public function getAssocPreference($attribute, $index = NULL, $ignoreExpired = true)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAssocPreference', [$attribute, $index, $ignoreExpired]);

        return parent::getAssocPreference($attribute, $index, $ignoreExpired);
    }

    /**
     * {@inheritDoc}
     */
    public function deleteAssocPreference($attribute, $index = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'deleteAssocPreference', [$attribute, $index]);

        return parent::deleteAssocPreference($attribute, $index);
    }

    /**
     * {@inheritDoc}
     */
    public function _getPreferences()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '_getPreferences', []);

        return parent::_getPreferences();
    }

}
